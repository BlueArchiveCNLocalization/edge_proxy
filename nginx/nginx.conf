user www-data;
worker_processes auto;
events { worker_connections 1024; }

http {
    lua_shared_dict cache_control 10m;

    proxy_cache_path /usr/local/openresty/nginx/proxy-cache levels=1:2 keys_zone=my_cache:10m max_size=5g inactive=365d use_temp_path=off;

    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;

        # Caching proxy
        location / {
            proxy_pass https://cdn.bluearchive.me;
            proxy_set_header Host cdn.bluearchive.me;

            # SSL configuration
            proxy_ssl_server_name on;                 # Enable SNI
            proxy_ssl_name cdn.bluearchive.me;          # Force SNI to the hostname
            proxy_ssl_protocols TLSv1.2 TLSv1.3;         # Use secure TLS protocols
            proxy_ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
            proxy_ssl_verify on;                         # Enable certificate verification
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
            proxy_ssl_verify_depth 2;

            # Caching configuration
            proxy_cache my_cache;
            proxy_cache_valid 200 365d;
            proxy_cache_use_stale updating;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Cache clear endpoint
        location = /clear-cache {
            content_by_lua_file /usr/local/openresty/nginx/lua/verify.lua;
        }
    }
}
